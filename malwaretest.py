#!/usr/bin/python3
#scp -r root@10.12.0.20:/root/files C:/
import requests
import os
import json
import time
import hashlib

api_key = "<YOUR API KEY>"
base = {}
def scan_file(api_key,file_path):
    file_stats = os.stat(file_path)
    file_size = (file_stats.st_size /(1024 * 1024))
    with open(file_path, 'rb') as f:
        file = {'file': (file_path, f)}
        if file_size <= 32:
            url = "https://www.virustotal.com/vtapi/v2/file/scan"
        elif file_size <= 650:
            url = "https://www.virustotal.com/vtapi/v2/file/scan/upload_url"
        param = {"apikey":api_key}
        req = requests.post(url,params=param,files=file)
        rep_json = json.loads(req.text)
        resource = rep_json['resource']
    return resource

def file_report(api_key, resource, file):
    url = 'https://www.virustotal.com/vtapi/v2/file/report'
    params = {'apikey': api_key, 'resource': resource}
    response = requests.get(url, params=params)
    json_resp = response.json()
    positives = json_resp.get('positives', 0)
    total = json_resp.get('total', 0)
    if total == 0:
        percentage = 0
    else:
        percentage = (positives/total)*100
    print(f"Percentage of the file {file}: {percentage}")
    return percentage
    
def decision():
    path = os.path.dirname(os.path.abspath("malwaretest.py")) #"C:/users/student/Downloads/files/" 
    if os.path.exists(path):
        for file in os.listdir(path):
            file_path = os.path.join(path,file)
            file_md5 = hashlib.md5(file_path.encode()).hexdigest()
            if file not in base or base[file] != file_md5:
                print(f"New File:{file}")
                resource = scan_file(api_key,file_path)
                time.sleep(15)
                percentage = file_report(api_key, resource, file)
                if percentage > 5:
                    print(f"Detected Malicious File:{file}")
            
if __name__ == '__main__':
    decision()
